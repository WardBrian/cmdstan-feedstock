{% set name = "cmdstan" %}
{% set version = "2.30.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz  # [x86 or arm64]
  sha256: bab76dcefa7f4c955595c0bf0496770507fc6ab0df5896e8cf8c2db0a17eedb9  # [x86 or arm64]
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}-linux-arm64.tar.gz  # [aarch64]
  sha256: a23ffb2474f82d9711007880d8a6ccea965b39ee82f7c15ffff70db06f43226f  # [aarch64]
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}-linux-ppc64el.tar.gz  # [ppc64le]
  sha256: 4a314944eb4e61f27e7a30f0aedd129297415386c175cbf02c80711cf0986d55  # [ppc64le]
  patches:
    - no-dtag-flag.patch  # [osx]
    - no-nan-check.patch  # [win]

build:
  number: 1
  skip: true  # [not win]
  binary_relocation: false

requirements:
  build:
    - {{ compiler('cxx') }}        # [not win]
    - make                         # [not win]
    - {{ compiler('clang') }}      # [win]
    - m2w64-make                   # [win]
    - m2-filesystem                # [win]
    - m2-sed                       # [win]
    - m2-coreutils                 # [win]
  host:
    - tbb-devel
  run:
    - {{ compiler('cxx') }}        # [not win]
    - make                         # [not win]
    - tbb-devel
    - {{ compiler('clang') }}      # [win]
    - m2w64-make                   # [win]
    - m2-filesystem                # [win]
    - m2-sed                       # [win]
    - m2-coreutils                 # [win]

test:
  downstreams:
    - cmdstanpy

about:
  home: https://mc-stan.org/users/interfaces/cmdstan.html
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: CmdStan, the command line interface to Stan
  description: |
    <b>CmdStan</b> is the command line interface to Stan, a package providing

    * full Bayesian inference using the No-U-Turn sampler (NUTS), a variant of Hamiltonian Monte Carlo (HMC),
    * penalized maximum likelihood estimation (MLE) using optimization, either Newton or quasi-Newton algorithms BFGS and L-BFGS,
    * approximate Bayesian inference using automatic differentiation variational inference (ADVI),
    * a full first- and higher-order automatic differentiation library based on C++ template overloads, and
    * a supporting fully-templated matrix, linear algebra, and probability special function library.
  doc_url: https://mc-stan.org/docs/cmdstan-guide/index.html
  dev_url: https://github.com/stan-dev/cmdstan

extra:
  recipe-maintainers:
    - maresb
    - WardBrian
