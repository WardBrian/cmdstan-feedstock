{% set name = "cmdstan" %}
{% set version = "2.33.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz  # [x86 or arm64]
  sha256: e6197f841cff4e57f682b662d6668df3cccd4a1e1e5de9cae010b1a7077b1040  # [x86 or arm64]
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}-linux-arm64.tar.gz  # [aarch64]
  sha256: 0b1f1b3b94ddd4935627abbc9e75a154f61dbf07c64ad2b9e8b3aea75fbcb747  # [aarch64]
  url: https://github.com/stan-dev/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}-linux-ppc64el.tar.gz  # [ppc64le]
  sha256: b227095d8a8ce0d8b97f27e5330262fc19f39e749ff1bda4d6bc3219d4d1c9ce  # [ppc64le]
  patches:
    - no-dtag-flag.patch  # [osx]

build:
  number: 0
  binary_relocation: false

requirements:
  build:
    - {{ compiler('cxx') }}        # [not win]
    - make                         # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - m2w64-make                   # [win]
    - m2-filesystem                # [win]
    - m2-sed                       # [win]
    - m2-coreutils                 # [win]
  host:
    - tbb-devel                    # [not win]
  run:
    - {{ compiler('cxx') }}        # [not win]
    - make                         # [not win]
    - tbb-devel                    # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - m2w64-make                   # [win]
    - m2-filesystem                # [win]
    - m2-sed                       # [win]
    - m2-coreutils                 # [win]
  run_constrained:
    - tbb >=2021                   # [win]

test:
  downstreams:
    - cmdstanpy

about:
  home: https://mc-stan.org/users/interfaces/cmdstan.html
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: CmdStan, the command line interface to Stan
  description: |
    <b>CmdStan</b> is the command line interface to Stan, a package providing

    * full Bayesian inference using the No-U-Turn sampler (NUTS), a variant of Hamiltonian Monte Carlo (HMC),
    * penalized maximum likelihood estimation (MLE) using optimization, either Newton or quasi-Newton algorithms BFGS and L-BFGS,
    * approximate Bayesian inference using automatic differentiation variational inference (ADVI),
    * a full first- and higher-order automatic differentiation library based on C++ template overloads, and
    * a supporting fully-templated matrix, linear algebra, and probability special function library.
  doc_url: https://mc-stan.org/docs/cmdstan-guide/index.html
  dev_url: https://github.com/stan-dev/cmdstan

extra:
  recipe-maintainers:
    - maresb
    - WardBrian
